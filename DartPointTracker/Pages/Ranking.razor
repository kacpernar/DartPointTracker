@page "/ranking"
@using DartPointTracker.Models
@inject IPlayerService PlayerService
<PageTitle>Ranking</PageTitle>

<div class="container">
    <div class="row">
        @if (RankedPlayers != null && RankedPlayers.Any())
        {
            <h3>Player Ranking</h3>
            <table class="table">
                <thead>
                <tr>
                    <th>Rank</th>
                    <th>Name</th>
                    <th>Elo Ranking Score</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var player in RankedPlayers)
                {
                    <tr style="@(GetRowStyle(player))">
                        <td>@player.Rank</td>
                        <td>@player.Name</td>
                        <td>@player.EloRankingScore</td>
                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <p>No players available.</p>
        }

    </div>
</div>


@code {

    private List<Player> RankedPlayers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await PlayerService.GetPlayers();
        RankedPlayers = PlayerService.Players.OrderByDescending(p => p.EloRankingScore).ToList();

        for (int i = 0; i < RankedPlayers.Count; i++)
        {
            RankedPlayers[i].Rank = i + 1;
        }
    }

    private string GetRowStyle(Player player)
    {
        if (player.Rank == 1)
        {
            return "background-color: green;";
        }

        if (player.Rank is 2 or 3)
        {
            return "background-color: orange;";
        }

        return "";
    }

}