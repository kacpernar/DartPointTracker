@page "/ranking"
@using DartPointTracker.Models
@inject IPlayerService PlayerService
<div class="container">
    <div class="row">
        @if (RankedPlayers != null && RankedPlayers.Any()) {
            <div class="mb-3 text-center">
                PLAYER RANKING
            </div>
            <table class="table">
                <thead>
                <tr>
                    <th>Rank</th>
                    <th>Name</th>
                    <th>Elo Score</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var player in RankedPlayers) {
                    <tr style="@(GetRowStyle(player))">
                        <td>@player.Rank</td>
                        <td>@player.Name</td>
                        <td>@player.EloRankingScore</td>
                    </tr> }
                </tbody>
            </table> }
        else {
            <p>No players available.</p> }
    </div>
</div>
@code {
    private List<Player> RankedPlayers { get; set; }
    protected override async Task OnInitializedAsync() {
        await PlayerService.GetPlayers();
        RankedPlayers = PlayerService.Players
            .OrderByDescending(p => p.EloRankingScore)
            .Select((player, index) => { player.Rank = index + 1; return player; })
            .ToList(); }
    private string GetRowStyle(Player player)
    { if (player.Rank == 1) {
            return "background-color: green;"; }
        if (player.Rank is 2 or 3) {
            return "background-color: orange;"; }
        return ""; }}