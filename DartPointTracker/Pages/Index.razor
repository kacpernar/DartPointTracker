@page "/"
@using DartPointTracker.Models
@using DartPointTracker.Services
@using DartPointTracker.Components
@inject IGameService GameService
@inject IPlayerService PlayerService
@inject NavigationManager NavigationManager

<div class="mb-3">
    <label class="form-label">Select Game Mode:</label>
    <div class="game-mode-container">
        @foreach (var gamePoints in GameSettings.GamePoints)
        {
            <button class="game-mode @(gamePoints == _gamePoints ? "selected" : "")" @onclick="() => SelectGameMode(gamePoints)">@gamePoints</button>
        }
    </div>
</div>


<div class="mb-3">
    <div class="row align-items-center">
        <div class="col">
            <h4>Players:</h4>
        </div>
        <div class="col-auto">
            <button class="btn btn-success" @onclick="() =>ChoosePlayerModal.Open()">Add Players</button>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary ml-2" @onclick="() =>CreateNewPlayerModal.Open()">Create New Player</button>
        </div>
    </div>
    <ul>
        @foreach (var player in _playersInGame)
        {
            <li>@player.Name</li>
        }
    </ul>
</div>
<button class="btn btn-primary mt-2" @onclick="StartGame" disabled="@(_playersInGame.Count == 0)">Start Game</button>



<ChoosePlayer @ref="ChoosePlayerModal" Players="PlayerService.Players" PlayersInGame="_playersInGame" Parent="@this"></ChoosePlayer>
<CreateNewPlayer @ref="CreateNewPlayerModal" PlayerService="PlayerService"></CreateNewPlayer>


@code {
    private ChoosePlayer ChoosePlayerModal { get; set; }
    private CreateNewPlayer CreateNewPlayerModal { get; set; }
    private int _gamePoints = 301;
    private readonly List<Player> _playersInGame = [];

    protected override async Task OnInitializedAsync()
    {
        await PlayerService.GetPlayers();
    }

    public void RefreshState()
    {
        StateHasChanged();
    }

    private void SelectGameMode(int gamePoints)
    {
        _gamePoints = gamePoints;
    }

    async Task StartGame()
    {
        await GameService.InitializeGame(_playersInGame, _gamePoints);
        _playersInGame.Clear();
        NavigationManager.NavigateTo("/game");
    }

}