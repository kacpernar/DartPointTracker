@page "/game"
@using DartPointTracker.Services
@using DartPointTracker.Components
@inject IGameService GameService
@inject IPlayerService PlayerService
@inject NavigationManager NavigationManager
@if (GameService.CurrentGame is not null) {
    if (GameService.CurrentGame.IsFinished) {
        <div class="container">
            <Summary Game="GameService.CurrentGame"></Summary>
            <div>
                <button class="btn purple-form" disabled="@GameService.CurrentGame.GameSaved" @onclick="SendGame">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                         class="bi bi-file-arrow-up" viewBox="0 0 16 16">
                        <path
                            d="M8 11a.5.5 0 0 0 .5-.5V6.707l1.146 1.147a.5.5 0 0 0 .708-.708l-2-2a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L7.5 6.707V10.5a.5.5 0 0 0 .5.5" />
                        <path
                            d="M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm0 1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1" />
                    </svg>
                    Save Game
                </button>
                <button class="btn btn-light-purple" @onclick="GoToRanking">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trophy-fill"
                         viewBox="0 0 16 16">
                        <path
                            d="M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5q0 .807-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33 33 0 0 1 2.5.5m.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935m10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935" />
                    </svg>
                    Ranking
                </button>
            </div>
            @if (_message != null) {
                <div class="alert @(_isSuccess ? "alert-success" : "alert-danger")" role="alert">
                    @_message
                </div> }
        </div> }
    else {
        <div class="players-wrapper">
            @foreach (var player in GameService.CurrentGame.Players) {
                <div class="player-info @(player.Id == GameService.CurrentGame.CurrentPlayer.Id ? "active-player" : "inactive-player")">
                    <div>@player.Name: @player.Score</div>
                    <div class="input-group">
                        @if (player.Won) {
                            <h1>Won</h1> }
                        else {
                            <div class="circle-container">
                                @foreach (var dartThrow in player.CurrentRoundThrows) {
                                    <div class="circle">@dartThrow</div> }
                            </div> }
                    </div>
                </div> }
        </div>
        <ChoosePointComponent
            OnButtonClick="AddDartThrow"
            OnBackClick="HandleBackClick"/> } }
@code {
    private int _dartThrow;
    string? _message;
    bool _isSuccess;
    private void AddDartThrow(int value) {
        _dartThrow = value;
        GameService.CurrentGame.AddDartThrow(_dartThrow); }
    private void HandleBackClick() {
        GameService.CurrentGame.RemoveLastDartThrow(); }
    private async Task SendGame() {
        (_isSuccess,_message) = await PlayerService.SendGame(GameService.CurrentGame); }
    private Task GoToRanking() {
        NavigationManager.NavigateTo("/ranking");
        return Task.CompletedTask; }}