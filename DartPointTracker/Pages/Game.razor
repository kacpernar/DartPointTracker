@page "/game"
@using DartPointTracker.Services
@using DartPointTracker.Components
@inject IGameService GameService
@inject NavigationManager NavigationManager

@if (GameService.CurrentGame is not null)
{
    <div class="players-wrapper">
        @foreach (var player in GameService.CurrentGame.Players)
        {
            <div class="player-info @(player.Id == GameService.CurrentGame.CurrentPlayer.Id ? "active-player" : "inactive-player")">
                <div>@player.Name: @player.Score</div>

                <div class="input-group">

                    @if (player.Won)
                    {
                        <h1>Won</h1>
                    }
                    else
                    {
                        <div class="circle-container">
                            @foreach (var dartThrow in player.CurrentRoundThrows)
                            {
                                <div class="circle">@dartThrow</div>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    </div>


    <ChoosePointComponent
        OnButtonClick="AddDartThrow"
        OnBackClick="HandleBackClick"/>
}


@code {
    private int _dartThrow;

    private void AddDartThrow(int value)
    {
        _dartThrow = value;
        GameService.CurrentGame.AddDartThrow(_dartThrow);
        if (GameService.CurrentGame.IsFinished)
        {
            NavigationManager.NavigateTo("/summary");
        }
    }

    private void HandleBackClick()
    {
        GameService.CurrentGame.RemoveLastDartThrow();
    }

}